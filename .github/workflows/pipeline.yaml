name: Pipeline

on:
  push:
    branches:
      - 'main'
      - 'develop'
      - 'feature/**'
  delete:
    branches:
      - 'feature/**'

env:
  STACK_NAME: APP-LAMBDA-CAM-STACK
  DEVELOPER_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEVELOPER }}
  DEVELOPER_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOPER }}
  DEVELOPER_REGION: us-east-1
  DEVELOPER_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::[DEVELOPER_ACCOUNT_ID]:role/DeveloperCrossAccountRole
  DEVELOPER_ENVIRONMENT_FILE: infra/environment/developer.json

  PRODUCTION_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PRODUCTION }}
  PRODUCTION_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PRODUCTION }}
  PRODUCTION_REGION: us-east-1
  PRODUCTION_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::[PRODUCTION_ACCOUNT_ID]:role/CloudFormationExecutionRole
  PRODUCTION_ENVIRONMENT_FILE: infra/environment/production.json

jobs:
  deploy-cross-account:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Step 1: Assume CloudFormation Role in Root Account
      - name: Assume CloudFormation Role in Root Account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::[ROOT_ACCOUNT_ID]:role/CloudFormationExecutionRole
          role-session-name: root-session
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      # Step 2: Assume DeveloperCrossAccountRole in Developer Account
      - name: Assume DeveloperCrossAccountRole in Developer Account
        run: |
          ASSUMED_ROLE=$(aws sts assume-role \
            --role-arn arn:aws:iam::[DEVELOPER_ACCOUNT_ID]:role/DeveloperCrossAccountRole \
            --role-session-name developer-session \
            --query "Credentials" --output json)
          export AWS_ACCESS_KEY_ID=$(echo $ASSUMED_ROLE | jq -r '.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo $ASSUMED_ROLE | jq -r '.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo $ASSUMED_ROLE | jq -r '.SessionToken')

      # Step 3: Deploy CloudFormation in Developer Account
      - name: Deploy CloudFormation in Developer Account
        run: |
          aws cloudformation deploy \
            --template-file infra/cf-lambda.yaml \
            --stack-name ${{ env.STACK_NAME }} \
            --capabilities CAPABILITY_IAM \
            --region us-east-1 \
            --parameter-overrides file://infra/environment/developer.json
